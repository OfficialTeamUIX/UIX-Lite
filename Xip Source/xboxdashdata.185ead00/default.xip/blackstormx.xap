var InMainLevel;
var bInTestScreenSaverView;
var bAnimatedOrbs;
var MenuItem;

DEF theBSXClockLevel Level
{
	function OnArrival() { }
	behavior
	{
		sleep 15;
		if(bInTestScreenSaverView) { UpdateListClockHands(); }
	}
	function OnActivate() { }
}

function initialize() { }

DEF theBSXMenu Level
{
	archive "BlackstormX.xip"
	children
	[
		Inline
		{
			url "BlackstormX/default.xap"
			
			function onLoad()
			{
				theBSXJoy.secretKey = "YX";
				InMainLevel = true;
				MenuItem = 1;
				
				var c = theBSXMenu.children[0].children[0];
				c.theMainClock.visible = false;
				
				//PanelCheck();
				//MusicOnBootCheck();
				UpdateOrbText();
				
				bAnimatedOrbs = GetSavedBooleanValue("default","Animated");
				var HolderAlpha;
				var OrbGlowAlpha;
				if(bAnimatedOrbs)
				{
					c.theMovieUnit.fade = 1;
					c.theGamesUnit.fade = 1;
					c.theMusicUnit.fade = 1;
					c.theMemoryUnit.fade = 1;
					c.theSettingsUnit.fade = 1;
					c.TotalGamesTube.SetTranslation(-30, -15, -80);
					c.TotalMusicTube.SetTranslation(-36, 14, -100);
					c.TotalSettingsTube.SetTranslation(90, -10, -80);
					c.theGamesTitle.SetTranslation(-100, -10, -20);
					c.theSettingsTitle.SetTranslation(100, -5, -20);
					HolderAlpha  = 1;
					OrbGlowAlpha = 1;
					UpdateTheREZN8Orbs();
				}
				else
				{
					HolderAlpha  = 0.2;
					OrbGlowAlpha = 0.7;
					UpdateTheBSXMenu();
				}
				
				//flip down initialization//will need to move all this into sep. xap
				InHDLevel2 = false;
				bHDMenuVisible0 = false;
				nCurHDMenuItem0 = 0;
				nCurHDMenuScroll0 = 0;
				nCurHDMenuVisible0 = 5;
				nPlayCursor0 = 0;
				nPreviousPlayCursor0 = 0;
				nPlayScroll0 = 0;
				nPlayVisible0 = 9;
				//end flip down area//
				bInTestScreenSaverView = false;
				
				bInRecentTitles = false;
				bRecentToggled = false;
				bInBrowser = false;
				
				c.play_buttons.visible = false;
				c.theSettingsEqualizer.visible = false;
				c.MU_L3_button_gameinfo.visible = false;
				c.MU_L3_text_gameinfo.visible = false;
				c.MU_L3_button_launch.visible = false;
				c.MU_L3_text_launch.visible = false;
				c.MU_L3_button_addfav.visible = false;
				c.MU_L3_text_addfav.visible = false;
				
				c.Games_Holder.SetAlpha(HolderAlpha);
				c.Music_Holder.SetAlpha(HolderAlpha);
				c.Movie_Holder.SetAlpha(HolderAlpha);
				c.Memory_Holder.SetAlpha(HolderAlpha);
				c.Settings_Holder.SetAlpha(HolderAlpha);
				c.theGamesGlow.SetAlpha(OrbGlowAlpha);
				c.theMusicGlow.SetAlpha(OrbGlowAlpha);
				c.theMoviesGlow.SetAlpha(OrbGlowAlpha);
				c.theMemoryGlow.SetAlpha(OrbGlowAlpha);
				c.theSettingsGlow.SetAlpha(OrbGlowAlpha);
				
				//UpdateDVDIconStatus();
			}
		}
	]
	
	path DEF theBSXViewpoint Viewpoint
	{
		fieldOfView 1.2
		orientation -0.177400 -1.983500 -0.036250 -0.045440
		position 000000 -30.299999 120.300003
		jump false
	}
	
	shell Transform
	{
		scale 150 150 150
		translation 0 -20 80
		children
		[
			DEF theSettingsMenuShellSpinner Spinner
			{
				rpm 0
				axis 0 1 0
				children
				[
					DEF theSettingsMenuShellWaver Waver
					{
						rpm 0.75 //rpm 2.25
						children
						[
							Shape
							{
								appearance Appearance
								{
									material MaxMaterial { name "InnerWall_01" }
									texture ImageTexture
									{
										alpha true
										url "cellwall.bmp"
									}
								}
								geometry Mesh { url "Inner_cell-FACES.xm" }
							}
							Shape
							{
								appearance MaxMaterial { name "InnerWall_02" }
								geometry Sphere { radius 1 }
							}
						]
					}
				]
			}
		]
	}
	
	control DEF theBSXJoy Joystick
	{
		function OnADown()
		{
			if ((RightTrigger == true) & (LeftTrigger == true) & bInBrowser == false) { QuickLaunch("A"); return; }
			theBSXMenu.children[0].children[0].select_pod_HL.children[0].appearance.material.param = 1;
			PlaySoundA();
			var orbFunction;
			if(bAnimatedOrbs)
			{
				var fixedMenuItem;
				if(MenuItem == 1) { fixedMenuItem = 3; }
				else if(MenuItem == 2) { fixedMenuItem = 1; }
				else if(MenuItem == 3) { fixedMenuItem = 2; }
				else { fixedMenuItem = MenuItem; }
				
				orbFunction = GetSavedValue("MainMenu","Button" + (fixedMenuItem) + "Action");
				if(InMainLevel){ if(fixedMenuItem == nMusicButton + 1) { theMusicMenuIn.Play(); } else { theGamesMenuIn.Play(); }}
				
			}
			else 
			{
				orbFunction = GetSavedValue("MainMenu","Button" + (MenuItem) + "Action");
				if(InMainLevel) { if(MenuItem == nMusicButton + 1) { theMusicMenuIn.Play(); } else { theGamesMenuIn.Play(); }}
			}
			
			if(MenuItem == 5) { orbFunction = "GoToSettings()"; if(InMainLevel) { theSettingsMenuIn.Play(); } }
			
			if (orbFunction == "GoToLauncher()")
			{
				REZN8OnADown();
			}
			else
			{
				HideInfoPanel();
				eval( orbFunction );
			}
		}
		
		function OnBDown()
		{
			if (InMainLevel == false) PlaySoundB();
			if ((RightTrigger == true) & (LeftTrigger == true) & bInBrowser == false) { QuickLaunch("B"); return; }
			REZN8OnBDown();
		}
		
		function OnXDown()
		{
			if ((RightTrigger == true) & (LeftTrigger == true) & bInBrowser == false) { QuickLaunch("X"); return; }
			if(( bHDMenuVisible0 ) | ( InHDLevel2 )) { REZN8HDDOnXDown(); }
		}
		
		function OnYDown()
		{
			if ((RightTrigger == true) & (LeftTrigger == true) & bInBrowser == false) { QuickLaunch("Y"); return; }
			REZN8HDDOnYDown();
		}
		
		function OnWhiteDown()
		{
			bUseBSXMenu = false;
			theMainMenu.GoTo();
		}
		
		function OnRightDown() { RightTrigger = true; }
		function OnRightUp() { RightTrigger = false; }
		function OnLeftDown() { LeftTrigger = true; }
		function OnLeftUp() { LeftTrigger = false; }
		
		function OnMoveUp()
		{
			if(( bHDMenuVisible0 ) | ( InHDLevel2 )) { REZN8HDDMoveUp(); }
		}
		
		function OnMoveDown()
		{
			if(( bHDMenuVisible0 ) | ( InHDLevel2 )) { REZN8HDDMoveDown(); }
		}
		
		function OnMoveLeft()
		{
			if(InMainLevel)
			{
				if(bAnimatedOrbs)
				{
					MenuItem = MenuItem + 1;
					theMainMenuBackward.Play();
					UpdateTheREZN8Orbs();
				}
				else
				{
					if (MenuItem == 1) { return; }
					else { MenuItem = MenuItem - 1; }
					PlaySoundMenuChange();
					UpdateTheBSXMenu();
				}
			}
			else if(( bHDMenuVisible0 ) | ( InHDLevel2 )) { REZN8HDDMoveLeft(); }
		}
		
		function OnMoveRight()
		{
			if(InMainLevel)
			{
				if(bAnimatedOrbs)
				{
					MenuItem = MenuItem - 1;
					if((MenuItem == -1) | (MenuItem == 0)) { MenuItem = 5; }
					theMainMenuForward.Play();
					UpdateTheREZN8Orbs();
				}
				else
				{
					if (MenuItem == 5) { return; }
					else { MenuItem = MenuItem + 1; }
					PlaySoundMenuChange();
					UpdateTheBSXMenu();
				}
			}
			else if(( bHDMenuVisible0 ) | ( InHDLevel2 )) { REZN8HDDMoveRight(); }
		}
		function OnKeyVerified()
		{
			//theConfig.ToggleNoisyCamera();
			if(ButtonYXAction != "Nothing")
			{
				PlaySoundA();
				if(ButtonYXAction == "GoToMusic()")
				{
					theMusicMenuIn.Play();
				}
				else if(ButtonYXAction != "ToggleNoisyCam()")
				{ 
					theGamesMenuIn.Play(); 
				}
				else if(ButtonYXAction != "GoToLauncher()")
				{
					if(bUseBSXHDD) { BSXOnADown(); }
					else { REZN8OnADown(); }
					return;
				}
				eval(ButtonYXAction);
			}
		}
	}
	
	behavior
	{
		sleep 0.1;
		var c = theBSXMenu.children[0].children[0];
		if (c.GM_L2_Arm01_03.visible & c.GM_L2_Arm01_03.moving == false & bHDMenuVisible0 == false) c.GM_L2_Arm01_03.visible = false;
	}
	
	function OnActivate()
	{
		CurrentViewpoint = theBSXViewpoint;
		//ShowInfoPanel();
	}
	
	function OnArrival()
	{
		if (g_bPanelDisplayed == true)
		{
			theMessageJoystick.isBound = true;
		}
	}
}

function UpdateTheBSXMenu()
{
	var c = theBSXMenu.children[0].children[0];
	if (MenuItem == 1)
	{
		c.theGames_inner.visible = true;
		c.theMusic_inner.visible = false;
		c.theMovies_inner.visible = false;
		c.theMemory_inner.visible = false;
		c.theSettings_inner.visible = false;
	}
	else if (MenuItem == 2)
	{
		c.theGames_inner.visible = false;
		c.theMusic_inner.visible = true;
		c.theMovies_inner.visible = false;
		c.theMemory_inner.visible = false;
		c.theSettings_inner.visible = false;
	}
	else if (MenuItem == 3)
	{
		c.theGames_inner.visible = false;
		c.theMusic_inner.visible = false;
		c.theMovies_inner.visible = true;
		c.theMemory_inner.visible = false;
		c.theSettings_inner.visible = false;
	}
	else if (MenuItem == 4)
	{
		c.theGames_inner.visible = false;
		c.theMusic_inner.visible = false;
		c.theMovies_inner.visible = false;
		c.theMemory_inner.visible = true;
		c.theSettings_inner.visible = false;
	}
	else if (MenuItem == 5)
	{
		c.theGames_inner.visible = false;
		c.theMusic_inner.visible = false;
		c.theMovies_inner.visible = false;
		c.theMemory_inner.visible = false;
		c.theSettings_inner.visible = true;
	}
}

function UpdateOrbText()
{
	var c = theBSXMenu.children[0].children[0];
	c.theMemoryTitle_text.text = Button4Text;
	c.theMusicTitle_text.text = Button2Text;
	c.theMoviesTitle_text.text = Button3Text;
	c.theGamesTitle_text.text = Button1Text;
	c.theSettingsTitle_text.text = Translate("SETTINGS");
}

function GoBackToMainMenu()
{
	var c = theBSXMenu.children[0].children[0];
	InMainLevel = true;
	
	c.theMoviesTitle.visible = true;
	c.theGamesTitle.visible = true;
	c.theMoviesTitle.visible = true;
	c.theMusicTitle.visible = true;
	c.theMemoryTitle.visible = true;
	c.theSettingsTitle.visible = true;
	c.theSettingsEqualizer.visible = false;
	
	ShowInfoPanel();
	theGamesMenuOut.Play();
	if(bAnimatedOrbs) 
	{
		UpdateTheREZN8Orbs(); 
	}
	else
	{
		c.theMovieUnit.SetTranslation(0,0,0);
		c.theMemoryUnit.SetTranslation(0,0,0);
		c.theSettingsUnit.SetTranslation(0,0,0);
		c.theGamesUnit.SetTranslation(0,0,0);
		c.theMusicUnit.SetTranslation(0,0,0);
		UpdateTheBSXMenu();
	}
}

/////////////////////////////////////////////////////////////////////////////////////
// BigJX's functions below are duplicated from harddrive.xap
/////////////////////////////////////////////////////////////////////////////////////
var CurrentSection;
var TempTitleList;
var CurFillDir;
var MaxRecentTitles;
var arrRecentNames;
var arrRecentPaths;
var arrMenuNames;
var arrMenuPaths;
var TotalSections;
var LastTitleLaunched;
var DefaultIcon;
var bInRecentTitles;
var bInBrowser;
var bRecentToggled;
var nPlayScroll0;
var nPlayScroll1;
var subTitle0;
var subTitle1;
var nPlayCursor1;
var nMaxLauncherMenuItems;
var TitleCount;

function LoadMenuItems()
{
	var c = theBSXMenu.children[0].children[0];
	nMaxLauncherMenuItems = StringToNumber(GetSavedValue("LauncherMenu","MaxLauncherMenuItems"));
	if(nMaxLauncherMenuItems == 0){ nMaxLauncherMenuItems = 8;SetSavedValue("LauncherMenu","MaxLauncherMenuItems",nMaxLauncherMenuItems);}
	TotalSections = 0;
	arrMenuNames = new Array;
	arrMenuPaths = new Array;
	for (var x = 0; x < 5; x = x + 1)
	{
		c.theMenuButtons.children[x].visible = false;
	}
	for (var i = 0; i < nMaxLauncherMenuItems; i = i + 1)
	{
		var v = Translate(GetSavedValue("LauncherMenu", "Title" + i));
		if(v != "") 
		{
			arrMenuNames[TotalSections] = v;
			arrMenuPaths[TotalSections] = GetSavedValue("LauncherMenu", "Path" + i);
			TotalSections = TotalSections + 1;
		}
	}
	arrMenuNames[TotalSections] = Translate("File Browser");
	arrMenuPaths[TotalSections] = Translate("Xbox Root");
	TotalSections = TotalSections + 1;
	if(GetSavedBooleanValue("ShowInSettings","StartFTP") != true)
	{
		arrMenuNames[TotalSections] = Translate("Start UIX Toolbox");
		arrMenuPaths[TotalSections] = Translate("");
		TotalSections = TotalSections + 1;
	}
	if(TotalSections >= 3) { nCurHDMenuVisible0 = Math.min(5, TotalSections); } else { nCurHDMenuVisible0 = 2; }
}

function GetTitleList(mnuName)
{
	CacheFile.section = "Cache";
	var TitleList = new Array;
	var TempList = new Array;
	var i = 1;
	TempList = Split(CacheFile.GetValue(mnuName),"|");
	while(TempList.length == 25)
	{
		TitleList = TitleList.concat(TempList);
		TempList = Split(CacheFile.GetValue(mnuName + "-" + i),"|");
		i = i + 1;
	}
	TitleList = TitleList.concat(TempList);
	return TitleList.sort();
}

function LoadRecentTitles()
{
	arrRecentNames = new Array;
	arrRecentPaths = new Array;
	MaxRecentTitles = 9;
	var AllTitles = GetAllTitles();
	var sAllTitles = AllTitles.join("\n");

	for (var i = 0; i < MaxRecentTitles; i = i + 1)
	{
		var v = GetSavedValue("RecentTitles", "Title" + i);
		if(v != "")
		{
			var arrTemp = Split(v,"|");
			if(sAllTitles.indexOf(arrTemp[1]) >= 0)
			{  //If this title is in the cache then add it to the Recent Titles list.
				arrRecentPaths[arrRecentPaths.length] = arrTemp[0];
				arrRecentNames[arrRecentNames.length] = arrTemp[1];
			} 
		}
	}
}

function UpdateRecentTitles(x,y)
{
	SetSavedValue("RecentTitles", "Title0", x + "|" + y );
	var index = 1;
	for(var i = 0; i < arrRecentNames.length; i = i + 1)
	{ 
		if(arrRecentNames[i] != y)
		{
			SetSavedValue("RecentTitles", "Title" + index, arrRecentPaths[i] + "|" + arrRecentNames[i] );
			index = index + 1;
			if(index == MaxRecentTitles) return;
		}
	}
	while(index < MaxRecentTitles)
	{   //Ensure the rest of the list is clear
		SetSavedValue("RecentTitles", "Title" + index, "");
		index = index + 1;
	}
}

function LaunchItem(x,y)
{
	var RelativePath = Split(x,";");
	var TitleLocation = Split(y,";");
	var FolderName = TitleLocation[0];
	var sDrive = DriveLocations[StringToNumber(TitleLocation[1])];
	if((sDrive != "Y:\\" & sDrive != "C:\\" & sDrive != "R:\\") & bHDDInitialized == false) 
	{  //The title is not on C or E so set the background before continuing.
		sLocation = x;
		sFolder = y;
		bLaunchItem = true;
		bHDDInitialize = true;
		return;
	}
	
	launchPath = PartitionLocations[StringToNumber(TitleLocation[1])] + RelativePath[StringToNumber(TitleLocation[2])] + "\\" + FolderName;
	launchXbe = "default.xbe";
	
	if(theConfig.NtFileExists(launchPath + "\\" + launchXbe)) 
	{  //We,ve found the title so fade the Launcher, update the RecentTitles , and goto theLaunchGameLevel
		//theLauncher.children[0].children[0].theWholeThing.visible = false;
		UpdateRecentTitles(x,y);
		theLaunchGameLevel.GoTo();
		return;
	}
	
	//If we've made it here the title was not found. 
	//This could be due to a stale cache. So, let's refresh the cache and then reload the list.
	if(theLauncher.children[0].children[0].theWholeThing.visible == false)
	{
		theBackground.isBound = true;
		theLauncher.children[0].children[0].theWholeThing.visible = true;
		theLauncher.shell.alpha = 1;
	}
	RefreshTitleList();
}

function RefreshTitleList()
{
	RefreshCache();
	LoadRecentTitles();
	if (bHDMenuVisible0 == false & bInBrowser == false)
	{
	   if(bInRecentTitles)
	   {
		   TempTitleList = arrRecentNames;
	   }
	   else
	   {
		   TempTitleList = GetTitleList(arrMenuNames[nCurHDMenuItem0]);
	   }
	   UpdateTrackList(); 
	}
}

///// File Browser Functions \\\\\
var bInBrowser;
var bInRoot;
var sFileType;
var RootDirectory;
var sDirectory;

function LoadDir()
{
	TempTitleList = GetDirectoryContents(sDirectory);
	UpdateTrackList();
}

function LoadRootContents()
{
	bInRoot = true;
	sFileType = new Array;
	RootDirectory = new Array;
	RootDirectory[RootDirectory.length] = "C";
	RootDirectory[RootDirectory.length] = "E";
	var nPartitions = StringToNumber(GetSavedValue("ExtendedPartitions","Partitions"));
	if(nPartitions & 1) RootDirectory[RootDirectory.length] = "F";
	if(nPartitions & 2) RootDirectory[RootDirectory.length] = "G";
	if(nPartitions & 16) RootDirectory[RootDirectory.length] = "E2";
	if(nPartitions & 4) RootDirectory[RootDirectory.length] = "F2";
	if(nPartitions & 8) RootDirectory[RootDirectory.length] = "G2";
}

function ChangeDirectory(x)
{
	if(bInRoot)
	{
		arrMenuPaths[nCurHDMenuItem0] = x + ":";
		bInRoot = false;
	}
	else
	{
		arrMenuPaths[nCurHDMenuItem0] = arrMenuPaths[nCurHDMenuItem0] + "\\" + x;
	}
	TempTitleList = GetDirectoryContents(arrMenuPaths[nCurHDMenuItem0]);
	if(TempTitleList.length >= 0) UpdateTrackList();
}

function GoBackDirectory()
{
	var CurPath = arrMenuPaths[nCurHDMenuItem0];
	if(CurPath.lastIndexOf("\\") < 0)
	{
		nPlayScroll0 = 0;
		nPlayCursor0 = 0;
		bInRoot = true;
		arrMenuPaths[nCurHDMenuItem0] = Translate("Xbox Root");
		TempTitleList = RootDirectory;
	}
	else
	{
		arrMenuPaths[nCurHDMenuItem0] = CurPath.substr(0,CurPath.lastIndexOf("\\"));
		TempTitleList = GetDirectoryContents(arrMenuPaths[nCurHDMenuItem0]);
	}
	UpdateTrackList();
}

function GetDirectoryContents(x)
{
	nPlayScroll0 = 0;
	nPlayCursor0 = 0;
	var CurFiles = new Array;
	var CurDirectoryContents = new Array;
	var sPath = x.substr(x.indexOf(":"));
	var sDrive = x.substr(0,x.indexOf(":"));
	if(bHDDInitialized == false)
	{
		if(sDrive.charAt(0) == "F" | sDrive.charAt(0) == "G")
		{
			sDirectory = x;
			bLoadDir = true;
			bHDDInitialize = true;
			return;
		}
	}
	var c = new Folder;
	c.path = GetDrive(sDrive) + sPath;
	sFileType = new Array;
	CurDirectoryContents[CurDirectoryContents.length] = "..";
	sFileType[sFileType.length] = "folder";
	if(c.subFolders.length() > 0)                   //Add folders if any
	{
		for(var i = 0; i < c.subFolders.length(); i = i + 1)
		{
			CurDirectoryContents[CurDirectoryContents.length] = c.subFolders[i].name;
			sFileType[sFileType.length] = "folder";
		}
		CurDirectoryContents = CurDirectoryContents.sort();
	}
	
	if(c.files.length() > 0)                        //Get files if any
	{
		for(var i = 0; i < c.files.length(); i = i + 1)
		{
			CurFiles[CurFiles.length] = c.files[i].name + "." + c.files[i].type;
		}
		CurFiles = CurFiles.sort();
	}
	for(var i = 0; i < CurFiles.length; i = i + 1)  //Add files to folders
	{
		var tempFile = CurFiles[i];
		CurDirectoryContents[CurDirectoryContents.length] = tempFile;
		if(tempFile.lastIndexOf(".") < 0)
		{
			sFileType[sFileType.length] = "unk";
		}
		else
		{
			sFileType[sFileType.length] = tempFile.substr(tempFile.lastIndexOf(".") + 1).toLowerCase();
		}
	}
	return CurDirectoryContents;
}

function GetDrive(x)
{
	if(x == "C") return "Y";
	if(x == "E") return "C";
	if(x == "F") return "N";
	if(x == "G") return "O";
	if(x == "E2") return "R";
	if(x == "F2") return "P";
	if(x == "G2") return "Q";
}

function PathEllipsis(x,MaxCharacters)
{
	var sPath, arrPath, center, a, b, c; 
	sPath = x;
	c = sPath.length();
	while(c > MaxCharacters)
	{
		arrPath = Split(sPath,"\\");
		center = Math.ceil(arrPath.length / 2);
		a = arrPath.slice(0,center - 1);
		b = arrPath.slice(center,arrPath.length);
		sPath = a.join("\\") + "\\" + b.join("\\");
		c = sPath.length();
	}
	return a.join("\\") + "\\...\\" + b.join("\\");
}
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////

/////////////////////REZN8 FLIP DOWN MENU FUNCTIONS BOBMCGEE/////////////////////////
////////vars added for flip downs...BobMcGee..move to sep. xap later/////////////////
var InHDLevel2;
var nCurHDMenuVisible0;         // The number of Launcher submenus (e.g. Apps,Games 2)
var bHDMenuVisible0;            //true/false referring to whether you are in LV1
var nCurHDMenuItem0;            //holds value 0-4 referring to tab position in LV1
var nCurHDMenuScroll0;
var subTitle0;                  //holds title for LV2 menu
var nPlayCursor0;               //holds position of LV2 title starting with 0 for title launching
var nPreviousPlayCursor0;
var nPlayScroll0;
var nPlayVisible0;
/////////////////////////////////////////////////////////////////////////////////////
function enterREZN8HDlv1()
{
	nPlayCursor0 = 0;
	bHDMenuVisible0 = true;
	InMainLevel = false;

	var c = theBSXMenu.children[0].children[0];

	c.GM_L2_Arm01_03.visible = true;

	c.HDMenuTab01.text = Translate(arrMenuNames[0]);
	c.HDMenuTab02.text = Translate(arrMenuNames[1]);
	c.HDMenuTab03.text = Translate(arrMenuNames[2]);
	c.HDMenuTab04.text = Translate(arrMenuNames[3]);
	c.HDMenuTab05.text = Translate(arrMenuNames[4]);

	//c.theSettingsEqualizer.visible = true;
	//c.theSettingsEqualizer.children[0].appearance.texture =   audioVisualizer;

/*
	c.theWaverOne.rpm = 0;
	c.theWaverTwo.rpm = 0;
	c.theWaverThree.rpm = 0;
*/

	//animation starting point
	c.GM_L2_Arm01_03.fade = 0;
	c.GM_L2_Arm01_03.SetRotation(1, 0, 0, -0.02618);
	c.GM_L2_Arm01_03.SetTranslation(-265, -15, 0);

	//animation end point
	c.GM_L2_Arm01_03.fade = 1;
	c.GM_L2_Arm01_03.SetRotation(-0.538800, 0.000 , 0.394700, -3.142000);
	c.GM_L2_Arm01_03.SetTranslation(-40, -15, 0);

	//c._button_surround_0.visible = false;
	c.theGames_inner.visible = false;
	c.theMusic_inner.visible = false;
	c.theMovies_inner.visible = false;
	c.theMemory_inner.visible = false;
	c.theSettings_inner.visible = false;
	//c.theSettingsUnit.fade = 0;
	//c.theSettingsUnit.SetTranslation(-70, -10, -300);
	c.theMovieUnit.fade = 1;
	c.theGamesUnit.fade = 1;
	c.theMusicUnit.fade = 1;
	c.theMemoryUnit.fade = 1;
	c.theMovieUnit.SetTranslation(70, 80, 90);
	c.theGamesUnit.SetTranslation(-100, 60, 100);
	c.theMusicUnit.SetTranslation(50, 150,70);
	c.theMemoryUnit.SetTranslation(50, 200, 30);   //testing
	c.theSettingsUnit.fade = 1;
	c.theSettingsUnit.SetTranslation(-85, 5, 65);
	//c.theSettingsUnit.SetRotation(0, 1, 0, 0.34906585);
	c.theMoviesTitle.visible = false;
	c.theGamesTitle.visible = false;
	c.theMoviesTitle.visible = false;
	c.theMusicTitle.visible = false;
	c.theMemoryTitle.visible = false;
	c.theSettingsTitle.visible = false;

	c.theIconCube.fade = 0.75;
	c.theIconCube.SetScale( 0, 0, 0 );
	c.theIconCube.SetAlpha( 0 );

	bInRecentTitles = false;
	bRecentToggled = false;
	bInBrowser = false;
	UpdateHDMenu();
}

function exitREZN8HDlv1() //exits need redone
{
	var c = theBSXMenu.children[0].children[0];
	InMainLevel = true;
	bHDMenuVisible0 = false;

	c.GM_L2_Arm01_03.fade = 1;
	c.GM_L2_Arm01_03.SetRotation(1, 0, 0, -0.02618);
	c.GM_L2_Arm01_03.SetTranslation(-265, -15, 0);
	//c.audio_panel.visible = false;
}

function enterREZN8HDlv2()
{
	InHDLevel2 = true;
	InMainLevel = false;
	bHDMenuVisible0 = false;
	var c = theBSXMenu.children[0].children[0];
	theMemoryMonitor.curDevUnit = 8;
	c.theIconSelector.curDevUnit = theMemoryMonitor.curDevUnit;
	c.theIconSelector.isActive = true;
	if (c.theIconSelector.IsDevUnitReady(theMemoryMonitor.curDevUnit) == false) return;
	TitleCount = c.theIconSelector.GetTitleCount();
	c.TitleText.text = subTitle0;
	//c.TrackCountText.text = HDMenuList.length + " Items";
	thePlayerPanelIn.Play();
	c.buttons_copy.visible = false;
	c.buttons_edit.visible = false;
	c.play_buttons.visible = true;
	c.MU_L3_timeslider.visible = false;
	c.MU_L3_timeslider_slot.visible = false;
	c.MusicTimeText.text = "";
	c.MU_L3_panel_timedisplay_01.visible = false;
	c.theSettingsUnit.fade = 1;
	c.theSettingsUnit.SetTranslation(-140, 0, 75);
	c.audio_panel.SetRotation(1, 0, 0, -0.02618);
	c.audio_panel.SetTranslation(-10, -15, 0);
	var Icon = GetSavedValue("default","LauncherOrbIcon");
	if (Icon == "Xbox") { DefaultIcon = "xboxlogo.bmp"; }
	else if (Icon == "UIX") { DefaultIcon =  "uixlogo.xbx"; }
	else { DefaultIcon =  ""; }
	c.theIconCube.visible = true;
	c.theIconCube.fade = 0.75;
	c.theIconCube.SetScale( 27.35, 28, 24 );
	c.theIconCube.SetAlpha( 1.0 );
	c.theScreenOutput2.fade = 0.75;
	c.theScreenOutput2.SetAlpha( 1.0 );
	UpdateTrackList();
}

function exitREZN8HDlv2()
{
	thePlayerPanelOut.Play();
	var c = theBSXMenu.children[0].children[0];
	c.theIconSelector.isActive = false;
	//c.audio_panel.visible = false;
	InHDLevel2 = false;
	c.audio_panel.SetRotation(-1, 0, 0, -3.246000);
	c.audio_panel.SetTranslation(-10, 140, 0);
	c.theIconCube.visible = false;
	c.theIconCube.fade = 0.75;
	c.theIconCube.SetScale( 0, 0, 0 );
	c.theIconCube.SetAlpha( 0 );
}

////Tailor all new funtions for filling menus etc below here////
function UpdateTrackList()
{
	var nTracks0 = TempTitleList.length;
	var c = theBSXMenu.children[0].children[0];

	if (nPlayCursor0 < 0 | nPlayScroll0 < 0)
	{
		nPlayScroll0 = 0;
		nPlayCursor0 = 0;
	}
	else if ( (nPlayCursor0 >= (nPlayVisible0 - 1)) & (nPreviousPlayCursor0 < nPlayCursor0) & (nPlayCursor0 > (nPlayScroll0 + (nPlayVisible0 - 1)) ))
	{
		nPlayScroll0 = nPlayCursor0 - (nPlayVisible0 - 1);
	}
	else if (nPlayCursor0 < nPlayScroll0) { nPlayScroll0 = nPlayCursor0; }
	nPreviousPlayCursor0 = nPlayCursor0;

	if (nPlayScroll0 > 0) { c.MU_morearrow_up.visible = true; }
	else { c.MU_morearrow_up.visible = false; }

	if ((nPlayScroll0 + nPlayVisible0) < nTracks0) { c.MU_morearrow_down.visible = true; }
	else { c.MU_morearrow_down.visible = false; }

	for (var i = 0; i < nPlayVisible0; i = i + 1)
	{
		c.TrackNames.children[i].children[1].visible = false; //Browser Icon
		var n = nPlayScroll0 + i;
		if (n >= nTracks0)
		{
			c.TrackNames.children[i].children[0].geometry.text = "";
		}
		else
		{
			var strCacheItem = Split(TempTitleList[n],";");
			var strName0 = strCacheItem[0];
			var Trans = c.TrackNames.children[i].translation;
			if(bInBrowser == false | bRecentToggled)
			{
				if(parseTrans(Trans,"X") != -0.41) c.TrackNames.children[i].SetTranslation(-0.42, parseTrans(Trans,"Y"), parseTrans(Trans,"Z"));
				var strAltName = GetTitleName(strName0);
				if (strAltName != "") strName0 = strAltName;
				if(strName0.length() > 42) strName0 = strName0.substr(0,40) + "...";
			}
			else
			{
				c.TrackNames.children[i].SetTranslation(-0.34, parseTrans(Trans,"Y"), parseTrans(Trans,"Z"));
				c.TrackNames.children[i].children[1].visible = true;
				if(sFileType[n] == "folder" | bInRoot)
				{ 
					c.TrackNames.children[i].children[1].children[0].appearance.texture.url = "folder.xbx";
				}
				else
				{
					c.TrackNames.children[i].children[1].children[0].appearance.texture.url = "file.xbx";
				}
			}

			c.TrackNames.children[i].children[0].geometry.text = strName0;

			if (n == nPlayCursor0)
			{
				c.TrackNames.children[i].SetScale(0.12, 0.12, 0.12);
				c.TrackNames.children[i].children[0].appearance.name = "GameHilite";
				c.theIconCube.children[0].appearance.material.name = "MainMenuOrb";
				var Icon = IconFile.GetValue(strCacheItem[0]).toLowerCase();
				if(Icon == "Unknown" | Icon == "" | (bInBrowser & (bRecentToggled == false))) 
				{
					c.theIconCube.children[0].appearance.texture.url = DefaultIcon; 
				}
				else
				{
					for(var x = 0; x < TitleCount; x = x + 1)
					{
						if(c.theIconSelector.GetTitleID(x).toLowerCase() == Icon) 
						{
							c.theIconCube.children[0].appearance.material.name = "SelectedIcon";
							c.theIconSelector.curTitle = x;
							c.theIconSelector.setSelImage();
							break;
						}

					}
				}
			}
			else
			{               
				c.TrackNames.children[i].SetScale(0.12, 0.12, 0.12);
				c.TrackNames.children[i].children[0].appearance.name = "Material #1335";
			}
		}
	}

	if(bInBrowser & (bRecentToggled == false))
	{
		var sPath = arrMenuPaths[nCurHDMenuItem0];
		if(sPath.length() > 20)
		{
			if(sPath.length() > 27) sPath = PathEllipsis(sPath,27);
			c.TrackListHeader.SetScale(0.110000, 0.100000,0.100000);
			c.TrackCountText.width = -22;
		}
		else
		{
			c.TrackListHeader.SetScale(0.144000, 0.134000,0.134000);
			c.TrackCountText.width = -15;
		}
		c.TrackCountText.text = sPath;
	}
	else
	{
		c.TrackListHeader.SetScale(0.144000, 0.134000,0.134000);
		c.TrackCountText.width = -15;    
		if (nTracks0 == 1)
		{    
			c.TrackCountText.text = nTracks0 + " " + Translate("Title");
		}
		else
		{
			c.TrackCountText.text = nTracks0 + " " + Translate("Titles");
		}
	}
}

function UpdateHDMenu()
{
	var c = theBSXMenu.children[0].children[0];
	if (nCurHDMenuScroll0 > 0)
	{
		c.morearrow_up.visible = true;
		c.morearrow_up.children[0].appearance.material.name = "NavType";
	}
	else
	{
		c.morearrow_up.visible = false;
	}
	
	if ((nCurHDMenuScroll0 + nCurHDMenuVisible0) < TotalSections)
	{
		c.morearrow_down.visible = true;
		c.morearrow_down.children[0].appearance.material.name = "NavType";
	}
	else
	{    
		c.morearrow_down.visible = false;
	}
	
	for (var i = 0; i < nCurHDMenuVisible0; i = i + 1)
	{
		var n = nCurHDMenuScroll0 + i;
		var v = arrMenuNames[n];
		c.theMenuButtons.children[i].visible = true;
		c.theMenuButtons.children[i].children[1].children[0].geometry.text = v;

		if (n == nCurHDMenuItem0)
		{
			c.theMenuButtons.children[i].children[0].appearance.material.name = "GameHilite";
			c.theMenuButtons.children[i].children[0].appearance.texture.url = "GameHilite_01.bmp";
			c.theMenuButtons.children[i].children[1].children[0].appearance.name = "HilightedType";
			c.MenuMetaText.text = v;
			if(i == 0) c.morearrow_up.children[0].appearance.material.name = "HilightedType";
			else if(i == 4) c.morearrow_down.children[0].appearance.material.name = "HilightedType";
		}
		else
		{
			c.theMenuButtons.children[i].children[0].appearance.material.name = "GameHilite";
			c.theMenuButtons.children[i].children[0].appearance.texture.url = "outline.tga";
			c.theMenuButtons.children[i].children[1].children[0].appearance.name = "NavType";
		}
		var mnuName = arrMenuNames[nCurHDMenuItem0];
		if(mnuName == "") { c.theMenuButtons.children[i].visible = false; }
		else { c.theMenuButtons.children[i].visible = true; }
	}
	c._button_surround.visible = (TotalSections >= 3);
	c.New_Line11.visible = (TotalSections >= 3);
	c._button_surround_0.visible = (TotalSections < 3);
}

function REZN8HDDOnXDown()
{
	if (InMainLevel == false) PlaySoundA();
	if(bInRecentTitles) return;
	if(bInBrowser & bInRoot == false)
	{
		if(LeftTrigger & RightTrigger)
		{
			if(sFileType[nPlayCursor0] == "xbe")
			{
				var sPath = arrMenuPaths[nCurHDMenuItem0] + "\\" + TempTitleList[nPlayCursor0];
				SetSavedValue("QuickLaunch","QuickLaunchX",sPath);
				TellUser(Translate("ASSIGNED_QUICKLAUNCH") + "X","");
				return;
			}
		} 
	} 
	subTitle1 = subTitle0;
	subTitle0 = Translate("Recent Titles");
	TempTitleList = arrRecentNames;
	if(bHDMenuVisible0)
	{
		exitREZN8HDlv1();
		enterREZN8HDlv2();
	}
	else
	{
		nPlayScroll1 = nPlayScroll0;
		nPlayCursor1 = nPlayCursor0;
		nPlayScroll0 = 0;
		nPlayCursor0 = 0;
		bRecentToggled = true;
		UpdateTrackList();
	}
	bInRecentTitles = true;
}
function REZN8HDDOnYDown()
{
	if (InMainLevel == false) PlaySoundA();
	if ((bHDMenuVisible0 == true) | (InHDLevel2 == true))
	{
		if(bInBrowser & bInRoot == false)
		{
			if(LeftTrigger & RightTrigger)
			{
				if(sFileType[nPlayCursor0] == "xbe")
				{
					var sPath = arrMenuPaths[nCurHDMenuItem0] + "\\" + TempTitleList[nPlayCursor0];
					SetSavedValue("QuickLaunch","QuickLaunchY",sPath);
					TellUser(Translate("ASSIGNED_QUICKLAUNCH") + "Y","");
					return;
				}
			} 
		} 
		bRefreshCache = true;
		bHDDInitialize = true;
	}
}

function REZN8HDDMoveRight()
{
	if(InHDLevel2)
	{
		var a = (TempTitleList.length - 1);
		if (nPlayCursor0 + nPlayVisible0 <= a)
		{
			nPlayCursor0 = nPlayCursor0 + nPlayVisible0;
			nPlayScroll0 = nPlayScroll0 + nPlayVisible0;
		}
		else if(nPlayCursor0 == a)
		{
			return;
		}
		else if(a - nPlayCursor0 < nPlayVisible0)
		{
			nPlayCursor0 = a;
		}
		PlaySoundMenuChange();
		UpdateTrackList();
	}
}

function REZN8HDDMoveLeft()
{
	if(InHDLevel2)
	{
		var a = (TempTitleList.length - 1);
		if (nPlayCursor0 - nPlayVisible0 >= 0)
		{
			nPlayCursor0 = nPlayCursor0 - nPlayVisible0;
			nPlayScroll0 = nPlayScroll0 - nPlayVisible0;
		}
		else if(nPlayCursor0 == 0)
		{
			return;
		}
		else if(nPlayCursor0 - nPlayVisible0 < nPlayVisible0)
		{
			nPlayCursor0 = 0;
			nPlayScroll0 = 0;
		}
		PlaySoundMenuChange();
		UpdateTrackList();
	}
}

function REZN8OnADown()
{
	if (InMainLevel)
	{
		var c = theBSXMenu.children[0].children[0];
		LoadMenuItems();
		LoadRecentTitles();
		LoadRootContents();
		HideInfoPanel();
		enterREZN8HDlv1();
	}
	else
	{
		if (bHDMenuVisible0)
		{
			var mnuName = arrMenuNames[nCurHDMenuItem0];
			if(mnuName == "")
			{
				return;
			}
			else if(mnuName == Translate("File Browser"))
			{
				bInBrowser = true;
				subTitle0 = mnuName;
				if(bInRoot)
				{
					TempTitleList = RootDirectory;
					sFileType = new Array(RootDirectory.length);
				}
				else
				{
					TempTitleList = GetDirectoryContents(arrMenuPaths[nCurHDMenuItem0]);
				}
				exitREZN8HDlv1();
				enterREZN8HDlv2();
			}
			else if(mnuName == Translate("Start UIX Toolbox"))
			{
				launch("Toolbox.xip","\\Device\\Harddisk0\\Partition2\\xboxdashdata.185ead00");
			}
			else
			{
				CurFillDir = arrMenuPaths[nCurHDMenuItem0];
				subTitle0 = mnuName;
				TempTitleList = GetTitleList(mnuName);
				exitREZN8HDlv1();
				enterREZN8HDlv2();
			}
		}
		else
		{
			if(bInRecentTitles)
			{
				LaunchItem(arrRecentPaths[nPlayCursor0],TempTitleList[nPlayCursor0]);
			}
			else if(bInBrowser)
			{
				if(sFileType[nPlayCursor0] == "folder" | bInRoot)
				{
					if(TempTitleList[nPlayCursor0] == "..")
					{
						GoBackDirectory();
					}
					else
					{
						ChangeDirectory(TempTitleList[nPlayCursor0]);
					}
				}
				else if(sFileType[nPlayCursor0] == "xbe")
				{
					if(LeftTrigger & RightTrigger & bInRoot == false)
					{
						var sPath = arrMenuPaths[nCurHDMenuItem0] + "\\" + TempTitleList[nPlayCursor0];
						SetSavedValue("QuickLaunch","QuickLaunchA",sPath);
						TellUser(Translate("ASSIGNED_QUICKLAUNCH") + "A","");
					}
					else
					{
						ExecuteFile(arrMenuPaths[nCurHDMenuItem0] + "\\" + TempTitleList[nPlayCursor0]);
					}
				}
			}
			else
			{
				LaunchItem(CurFillDir,TempTitleList[nPlayCursor0]);
			}
		}
	}
}

function REZN8OnBDown()
{
	if ((bHDMenuVisible0 == true) & (InHDLevel2 == false))
	{
		exitREZN8HDlv1();
		GoBackToMainMenu();
	}
	else if ((bHDMenuVisible0 == false) & (InHDLevel2 == true))
	{
		if(bInBrowser & bInRoot == false)
		{
			if(LeftTrigger & RightTrigger)
			{
				if(sFileType[nPlayCursor0] == "xbe")
				{
					var sPath = arrMenuPaths[nCurHDMenuItem0] + "\\" + TempTitleList[nPlayCursor0];
					SetSavedValue("QuickLaunch","QuickLaunchB",sPath);
					TellUser(Translate("ASSIGNED_QUICKLAUNCH") + "B","");
					return;
				}
			} 
		}
		if(bRecentToggled)
		{
			if(bInBrowser)
			{
				if(bInRoot)
				{
					TempTitleList = RootDirectory;
					sFileType = new Array(RootDirectory.length);
				}
				else
				{
					TempTitleList = GetDirectoryContents(arrMenuPaths[nCurHDMenuItem0]);
				}
			}
			else
			{
				TempTitleList = GetTitleList(arrMenuNames[nCurHDMenuItem0]);
			}
			TempTitleList = GetTitleList(arrMenuNames[nCurHDMenuItem0]);
			nPlayScroll0 = nPlayScroll1;
			nPlayCursor0 = nPlayCursor1;
			subTitle0 = subTitle1;
			bInRecentTitles = false;
			bRecentToggled = false;
			UpdateTrackList();
		}
		else
		{
			exitREZN8HDlv2();
			enterREZN8HDlv1();
		}
	}
}

function REZN8HDDMoveUp()
{
	if (bHDMenuVisible0)
	{
		if (nCurHDMenuItem0 <= 0)
		{
			nCurHDMenuItem0 = TotalSections - 1;
			if(TotalSections > 5) nCurHDMenuScroll0 = TotalSections - 5; 
		}
		else
		{
			nCurHDMenuItem0 = nCurHDMenuItem0 - 1;
			if(nCurHDMenuItem0 < nCurHDMenuScroll0) nCurHDMenuScroll0 = nCurHDMenuItem0;
		}
		PlaySoundMenuChange();
		UpdateHDMenu();
	}
	else
	{
		var a = (TempTitleList.length - 1);
		if (nPlayCursor0 <= 0)
		{
			nPlayCursor0 = a;
			if(a > nPlayVisible0) nPlayScroll0 = a - nPlayVisible0;
		}
		else
		{
			nPlayCursor0 = nPlayCursor0 - 1;
		}
		PlaySoundMenuChange();
		UpdateTrackList();
	}
}

function REZN8HDDMoveDown()
{
	if (bHDMenuVisible0)
	{
		if (nCurHDMenuItem0 == TotalSections - 1)
		{
			nCurHDMenuScroll0 = 0;
			nCurHDMenuItem0 = 0;
		}
		else
		{
			nCurHDMenuItem0 = nCurHDMenuItem0 + 1;
			if(nCurHDMenuItem0 - nCurHDMenuScroll0 >= nCurHDMenuVisible0) nCurHDMenuScroll0 = nCurHDMenuScroll0 + 1; 
		}
		PlaySoundMenuChange();
		UpdateHDMenu();
	}
	else
	{
		var a = (TempTitleList.length - 1);
		if (nPlayCursor0 < 0) { nPlayCursor0 = 0; }

		if (nPlayCursor0 == a) { nPlayCursor0 = 0; }
		else
		{
			nPlayCursor0 = nPlayCursor0 + 1;
		}
		PlaySoundMenuChange();
		UpdateTrackList();
	}
}
///END FLIP DOWN FUNCTIONS//MOVE ENTIRE CHUNK INTO ITS OWN XAP
/////////////////////////////////////////////////////////////////////////////////////

function UpdateTheREZN8Orbs()
{
	var c = theBSXMenu.children[0].children[0];
	if (MenuItem == 6) { MenuItem = 1; }
	if (MenuItem == 1)
	{
		c.theMovieUnit.SetTranslation(0,0,0);
		c.theMemoryUnit.SetTranslation(0,0,0);
		c.theSettingsUnit.SetTranslation(0,0,0);
		c.theGamesUnit.SetTranslation(0,0,0);
		c.theMusicUnit.SetTranslation(0,0,0);
		c.theGames_inner.visible = false;
		c.theMusic_inner.visible = false;
		c.theMovies_inner.visible = true;
		c.theMemory_inner.visible = false;
		c.theSettings_inner.visible = false;
	}
	else if (MenuItem == 2)
	{
		c.theMovieUnit.SetTranslation(100,15,-10);
		c.theMemoryUnit.SetTranslation(-100,5,-10);
		c.theSettingsUnit.SetTranslation(-50,20,-10);
		c.theGamesUnit.SetTranslation(100,-10,10);
		c.theMusicUnit.SetTranslation(-50,-30,20);
		c.theGames_inner.visible = true;
		c.theMusic_inner.visible = false;
		c.theMovies_inner.visible = false;
		c.theMemory_inner.visible = false;
		c.theSettings_inner.visible = false;
	}
	else if (MenuItem == 3)
	{
		c.theMovieUnit.SetTranslation(50,35,-20);
		c.theMemoryUnit.SetTranslation(-150,-25,10);
		c.theSettingsUnit.SetTranslation(-150,25,-20);
		c.theGamesUnit.SetTranslation(200,5,0);
		c.theMusicUnit.SetTranslation(50,-40,30);
		c.theGames_inner.visible = false;
		c.theMusic_inner.visible = true;
		c.theMovies_inner.visible = false;
		c.theMemory_inner.visible = false;
		c.theSettings_inner.visible = false;
	}
	else if (MenuItem == 4)
	{
		c.theMovieUnit.SetTranslation(-50,40,-30);
		c.theMemoryUnit.SetTranslation(-50,-35,20);
		c.theSettingsUnit.SetTranslation(-200,-5,0);
		c.theGamesUnit.SetTranslation(150,25,-10);
		c.theMusicUnit.SetTranslation(150,-25,20);
		c.theGames_inner.visible = false;
		c.theMusic_inner.visible = false;
		c.theMovies_inner.visible = false;
		c.theMemory_inner.visible = true;
		c.theSettings_inner.visible = false;
	}
	else if (MenuItem == 5)
	{
		c.theMovieUnit.SetTranslation(-100,10,-10);
		c.theMemoryUnit.SetTranslation(50,-20,10);
		c.theSettingsUnit.SetTranslation(-100,-15,10);
		c.theGamesUnit.SetTranslation(50,30,-20);
		c.theMusicUnit.SetTranslation(100,-5,10);
		c.theGames_inner.visible = false;
		c.theMusic_inner.visible = false;
		c.theMovies_inner.visible = false;
		c.theMemory_inner.visible = false;
		c.theSettings_inner.visible = true;
	}
}

/////////////////////////////////////////////////////////////////////////////////////
// Test Screensaver
/////////////////////////////////////////////////////////////////////////////////////
function UpdateListClockHands()
{
	var c = theBSXMenu.children[0].children[0];
	var d = new Date;
	var nClockHour = d.getHours();
	var nClockMinute = d.getMinutes();
	c.ClockHourHand.SetRotation(0, 0, -1, (nClockHour + nClockMinute / 60) * 6.283 / 12);
	c.ClockMinuteHand.SetRotation(0, 0, -1, (nClockMinute - 15) * 6.283 / 60);
}

function EnterTestScreensaver()
{
	var c = theBSXMenu.children[0].children[0];
	if( CurrentViewpoint == theBSXViewpoint & InMainLevel)
	{
		//bInScreenSaverView = true;
		theScreen.brightness = 0.5;
		bInTestScreenSaverView = true;
		UpdateListClockHands();

		c.theMainOrbsMenu.fade = .75;
		HideInfoPanel();
		//c.theMainClock.SetAlpha(1);
		c.theMainClock.visible = true;
		//c.theGames_inner.visible = false;
		if(bAnimatedOrbs)
		{
			if(MenuItem == 1) { c.theMainOrbsMenu.SetTranslation(50, -45, 105); }
			else if(MenuItem == 2) {  }
			else if(MenuItem == 3) {  }
			else if(MenuItem == 4) { c.theMainOrbsMenu.SetTranslation(0, -20, 75); }
			else if(MenuItem == 5) { c.theMainOrbsMenu.SetTranslation(80, -20, 85); }
		}
		else { c.theMainOrbsMenu.SetTranslation(50, -45, 105); }
		c.theMoviesTitle.visible = false;
		c.theMusicTitle.visible = false;
		c.theMemoryTitle.visible = false;
		c.theGamesTitle.visible = false;
	}
}

function ExitTestScreensaver()
{
	//bInScreenSaverView = false;
	bInTestScreenSaverView = false;
	var c = theBSXMenu.children[0].children[0];
	c.theMainClock.visible = false;
	if(InMainLevel)
	{
		c.theMainOrbsMenu.fade = .5;
		ShowInfoPanel();
		c.theMainOrbsMenu.SetTranslation(-15, -10, -29);
		c.theMoviesTitle.visible = true;
		c.theMusicTitle.visible = true;
		c.theMemoryTitle.visible = true;
		c.theGamesTitle.visible = true;
		//UpdateDVDIconStatus();
	}
}
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
